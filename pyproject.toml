[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "shai-hulud-detector"
version = "2.0.0"
description = "Python detector for Shai-Hulud NPM supply chain attack indicators with concurrent processing"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Shai-Hulud Detection Team", email = "security@example.com"}
]
keywords = ["security", "npm", "supply-chain", "malware", "detection"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Systems Administration",
]
requires-python = ">=3.8"
dependencies = [
    "importlib-resources>=1.3.0; python_version<'3.9'",
    "tqdm>=4.65.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/elijahr/shai-hulud-detect"
Repository = "https://github.com/elijahr/shai-hulud-detect"
Issues = "https://github.com/elijahr/shai-hulud-detect/issues"

[project.scripts]
shai-hulud-detector = "shai_hulud_detector.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["shai_hulud_detector*"]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
shai_hulud_detector = ["../compromised-packages.txt"]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]